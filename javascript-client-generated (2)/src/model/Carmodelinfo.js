/*
 * Marketing Management Service
 * A service for adding carmodels, offers and prices for cars
 *
 * OpenAPI spec version: 1.0.0
 * Contact: hariprasath.narayanasamy@gmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.42
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';

/**
 * The Carmodelinfo model module.
 * @module model/Carmodelinfo
 * @version 1.0.0
 */
export class Carmodelinfo {
  /**
   * Constructs a new <code>Carmodelinfo</code>.
   * @alias module:model/Carmodelinfo
   * @class
   * @param modelType {module:model/Carmodelinfo.ModelTypeEnum} 
   * @param modelName {String} 
   * @param transmission {module:model/Carmodelinfo.TransmissionEnum} 
   * @param fuelType {module:model/Carmodelinfo.FuelTypeEnum} 
   * @param trim {module:model/Carmodelinfo.TrimEnum} 
   */
  constructor(modelType, modelName, transmission, fuelType, trim) {
    this.modelType = modelType;
    this.modelName = modelName;
    this.transmission = transmission;
    this.fuelType = fuelType;
    this.trim = trim;
  }

  /**
   * Constructs a <code>Carmodelinfo</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Carmodelinfo} obj Optional instance to populate.
   * @return {module:model/Carmodelinfo} The populated <code>Carmodelinfo</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new Carmodelinfo();
      if (data.hasOwnProperty('model_type'))
        obj.modelType = ApiClient.convertToType(data['model_type'], 'String');
      if (data.hasOwnProperty('model_name'))
        obj.modelName = ApiClient.convertToType(data['model_name'], 'String');
      if (data.hasOwnProperty('transmission'))
        obj.transmission = ApiClient.convertToType(data['transmission'], 'String');
      if (data.hasOwnProperty('fuel_type'))
        obj.fuelType = ApiClient.convertToType(data['fuel_type'], 'String');
      if (data.hasOwnProperty('trim'))
        obj.trim = ApiClient.convertToType(data['trim'], 'String');
    }
    return obj;
  }
}

/**
 * Allowed values for the <code>modelType</code> property.
 * @enum {String}
 * @readonly
 */
Carmodelinfo.ModelTypeEnum = {
  /**
   * value: "SUVs"
   * @const
   */
  sUVs: "SUVs",

  /**
   * value: "Hatchback"
   * @const
   */
  hatchback: "Hatchback",

  /**
   * value: "Sedan"
   * @const
   */
  sedan: "Sedan",

  /**
   * value: "pickuptruck"
   * @const
   */
  pickuptruck: "pickuptruck",

  /**
   * value: "MUV"
   * @const
   */
  MUV: "MUV",

  /**
   * value: "off road"
   * @const
   */
  offRoad: "off road"
};
/**
 * @member {module:model/Carmodelinfo.ModelTypeEnum} modelType
 */
Carmodelinfo.prototype.modelType = undefined;

/**
 * @member {String} modelName
 */
Carmodelinfo.prototype.modelName = undefined;

/**
 * Allowed values for the <code>transmission</code> property.
 * @enum {String}
 * @readonly
 */
Carmodelinfo.TransmissionEnum = {
  /**
   * value: "manual"
   * @const
   */
  manual: "manual",

  /**
   * value: "automatic"
   * @const
   */
  automatic: "automatic"
};
/**
 * @member {module:model/Carmodelinfo.TransmissionEnum} transmission
 */
Carmodelinfo.prototype.transmission = undefined;

/**
 * Allowed values for the <code>fuelType</code> property.
 * @enum {String}
 * @readonly
 */
Carmodelinfo.FuelTypeEnum = {
  /**
   * value: "diesel"
   * @const
   */
  diesel: "diesel",

  /**
   * value: "petrol"
   * @const
   */
  petrol: "petrol",

  /**
   * value: "ev"
   * @const
   */
  ev: "ev",

  /**
   * value: "cng"
   * @const
   */
  cng: "cng"
};
/**
 * @member {module:model/Carmodelinfo.FuelTypeEnum} fuelType
 */
Carmodelinfo.prototype.fuelType = undefined;

/**
 * Allowed values for the <code>trim</code> property.
 * @enum {String}
 * @readonly
 */
Carmodelinfo.TrimEnum = {
  /**
   * value: "SE"
   * @const
   */
  SE: "SE",

  /**
   * value: "DX"
   * @const
   */
  DX: "DX",

  /**
   * value: "GT"
   * @const
   */
  GT: "GT"
};
/**
 * @member {module:model/Carmodelinfo.TrimEnum} trim
 */
Carmodelinfo.prototype.trim = undefined;

