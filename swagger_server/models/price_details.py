# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.price_info import PriceInfo  # noqa: F401,E501
from swagger_server import util


class PriceDetails(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, model_id: str=None, price: float=None, start_date: date=None, end_date: date=None, price_id: str=None):  # noqa: E501
        """PriceDetails - a model defined in Swagger

        :param model_id: The model_id of this PriceDetails.  # noqa: E501
        :type model_id: str
        :param price: The price of this PriceDetails.  # noqa: E501
        :type price: float
        :param start_date: The start_date of this PriceDetails.  # noqa: E501
        :type start_date: str
        :param end_date: The end_date of this PriceDetails.  # noqa: E501
        :type end_date: str
        :param price_id: The price_id of this PriceDetails.  # noqa: E501
        :type price_id: str
        """
        self.swagger_types = {
            'model_id': str,
            'price': float,
            'start_date': date,
            'end_date': date,
            'price_id': str
        }

        self.attribute_map = {
            'model_id': 'model_id',
            'price': 'price',
            'start_date': 'start_date',
            'end_date': 'end_date',
            'price_id': 'price_id'
        }
        self._model_id = model_id
        self._price = price
        self._start_date = start_date
        self._end_date = end_date
        self._price_id = price_id

    @classmethod
    def from_dict(cls, dikt) -> 'PriceDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The price_details of this PriceDetails.  # noqa: E501
        :rtype: PriceDetails
        """
        return util.deserialize_model(dikt, cls)

    @property
    def model_id(self) -> str:
        """Gets the model_id of this PriceDetails.


        :return: The model_id of this PriceDetails.
        :rtype: str
        """
        return self._model_id

    @model_id.setter
    def model_id(self, model_id: str):
        """Sets the model_id of this PriceDetails.


        :param model_id: The model_id of this PriceDetails.
        :type model_id: str
        """
        if model_id is None:
            raise ValueError("Invalid value for `model_id`, must not be `None`")  # noqa: E501

        self._model_id = model_id

    @property
    def price(self) -> float:
        """Gets the price of this PriceDetails.


        :return: The price of this PriceDetails.
        :rtype: float
        """
        return self._price

    @price.setter
    def price(self, price: float):
        """Sets the price of this PriceDetails.


        :param price: The price of this PriceDetails.
        :type price: float
        """
        if price is None:
            raise ValueError("Invalid value for `price`, must not be `None`")  # noqa: E501

        self._price = price

    @property
    def start_date(self) -> str:
        """Gets the start_date of this PriceDetails.


        :return: The start_date of this PriceDetails.
        :rtype: str
        """
        return self._start_date

    @start_date.setter
    def start_date(self, start_date: date):
        """Sets the start_date of this PriceDetails.


        :param start_date: The start_date of this PriceDetails.
        :type start_date: str
        """
        if start_date is None:
            raise ValueError("Invalid value for `start_date`, must not be `None`")  # noqa: E501

        self._start_date = start_date

    @property
    def end_date(self) -> str:
        """Gets the end_date of this PriceDetails.


        :return: The end_date of this PriceDetails.
        :rtype: str
        """
        return self._end_date

    @end_date.setter
    def end_date(self, end_date: date):
        """Sets the end_date of this PriceDetails.


        :param end_date: The end_date of this PriceDetails.
        :type end_date: str
        """
        if end_date is None:
            raise ValueError("Invalid value for `end_date`, must not be `None`")  # noqa: E501

        self._end_date = end_date

    @property
    def price_id(self) -> str:
        """Gets the price_id of this PriceDetails.


        :return: The price_id of this PriceDetails.
        :rtype: str
        """
        return self._price_id

    @price_id.setter
    def price_id(self, price_id: str):
        """Sets the price_id of this PriceDetails.


        :param price_id: The price_id of this PriceDetails.
        :type price_id: str
        """

        self._price_id = price_id
